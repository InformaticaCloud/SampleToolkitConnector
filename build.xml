<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="sampleadapter.jar" name="SampleAdapter">
	<property environment="env"/>

	<property name="dir.src" location="${basedir}/src" />
	<property name="dir.bin" location="${basedir}/bin"/>
	<property name="dir.bin.gen-src" location="${basedir}/generated/bin"/>
	<property name="dir.dist" location="${basedir}/dist"/>
	<property name="dir.lib" location="${basedir}/lib"/>
	<property name="dir.gen-src" location="${basedir}/generated/jax-ws"/>
	<property name="dir.adapterJars" location ="${dir.dist}/Adapter-jars" />
	<property name="dir.finalpack" location="${dir.dist}/package-sample.1.zip"/>
	<property name="THIRD_PARTY" location="../../../ThirdParty"/>
	<property name="toolkit-dist.dir" location="../../../toolkit/dist"/>
	<property name="jaxws.tools.jar" value="${THIRD_PARTY}/jaxws/jaxws-ri-2.2.3/lib/jaxws-tools.jar"/>
	<property name="endorsed.dir" value="${THIRD_PARTY}/endorsed" />
	<!--property name="TOOLKIT-COMMON" location="${basedir}/../toolkit/adapter-common"/-->



	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.6"/>
	<property name="source" value="1.6"/>

	<path id="cloud-adapter.classpath">
		<fileset dir="${dir.lib}">
			<include name = "*.jar"/>
		</fileset>
		<fileset dir="${dir.dist}">
			<include name = "sample-metadata.jar"/>
		</fileset>
	</path>

	<target name="init">
		<mkdir dir="${dir.bin}"/>
		<mkdir dir="${dir.dist}"/>
		<mkdir dir="${dir.lib}"/>
		<mkdir dir="${dir.gen-src}"/>
		<mkdir dir="${dir.bin.gen-src}"/>
		<copy file="${basedir}/../../adapters-common/dist/adapter-common.jar" todir="${basedir}/lib" />
		<copy file="${basedir}/../../adapters-interface/dist/adapter-interface.jar" todir="${basedir}/lib" />
		<copy file="${basedir}/../../../ThirdParty/jars/webservices-api.jar" todir="${basedir}/lib" />
		<copy file="${basedir}/../../../ThirdParty/jars/webservices-rt.jar" todir="${basedir}/lib" />
		<!--copy todir="${dir.lib}">
    		<fileset dir="${TOOLKIT-COMMON}/dist" includes="*.jar"/>
    	</copy-->
		<copy todir="${dir.bin}">
			<fileset dir="${dir.src}" includes="*.properties"/>
		</copy>
	</target>

	<target name="clean">
		<delete dir="${dir.bin}" />
		<delete dir="${dir.dist}" />
	</target>

	<target depends="clean" name="cleanall" description="Remove all generated files and dirs." />

	<target name="compile" depends="init, generated-src" 
		description="Compile all source code. Output goes to ${dir.bin}" >
		<javac srcdir="${dir.src}" destdir="${dir.bin}" 
			listfiles="yes"
			debug="true" debuglevel="${debuglevel}" 
			source="${source}" target="${target}">
			<classpath>
				<path refid="cloud-adapter.classpath"/>
			</classpath>

			<!-- uncomment the following lines for a verbose output of javac
			<compilerarg value="-Xstdout" />
			<compilerarg value="compiler_log.txt"/>
			-->
		</javac>
	</target>

	<!-- ================================= 
          target: sampleadapter-jar              
         ================================= -->
	<target name="sampleadapter.jar" 
    	    description="Builds the jar in ${dir.dist} for the Sample Adapter."
    	    depends="compile">
		<echo message="${ant.project.name}: ${ant.file}"/>

		<jar basedir="${dir.bin}" defaultexcludes="true" jarfile="${dir.dist}/sample-adapter.jar" >
			<!--
    			Note To Adapter Developer:
    			Please mention the fully qualified class name of the class that Implements the IPlugin interface
    			as the attribute value for the "provider" attribute.
    		 -->
			<service type="com.informatica.cloud.api.adapter.plugin.IPlugin"  provider="com.informatica.cloud.adapter.sample.plugin.SamplePlugin"/>
		</jar>
		<!--<delete dir="${basedir}/bin"/>-->
		<copy overwrite="true" verbose="true" todir="${dir.adapterJars}" >
			<fileset dir="${dir.dist}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<delete file="${dir.finalpack}"/>
		<zip destfile="${dir.finalpack}" basedir="${dir.dist}">
			<exclude name="*.jar" />
		</zip>
	</target>

	<target name="generated-src" description="Code Generated from the Sample System's Web Service" depends="init">
		<echo message="Generating source from wsdl" />
		<java jar = "${jaxws.tools.jar}" fork = "true" failonerror = "true">
			<arg line = "-d ${dir.gen-src} -s ${dir.gen-src} " />
			<arg line = "-p com.sample.wsproxy -keep http://infacloudsample.appspot.com/SampleDataService.wsdl" />
			<jvmarg line = "-Djava.endorsed.dirs=${endorsed.dir}" />
		</java>

		<javac srcdir="${dir.gen-src}" destdir="${dir.bin.gen-src}"
				listfiles="yes"
				debug="true" debuglevel="${debuglevel}"
				source="${source}" target="${target}">
			<compilerarg line="-Djava.endorsed.dirs=${endorsed.dir}" />
		</javac>

		<jar destfile="${dir.dist}/sample-metadata.jar"
					 basedir="${dir.bin.gen-src}"/>
		<!--<delete dir="${dir.bin.gen-src}"/>-->
	</target>

	<!-- ================================= 
	          JUNIT related targets START HERE              
	     ================================= -->
	<property name="dir.junit.infa" location="${basedir}/infa_junit"/>
	<property name="test.junit.results" value="${dir.junit.infa}/junit_results"/>
	<property name="test.junit.reports" value="${dir.junit.infa}/junit_reports"/>
	<property name="test.junit.adapterjars" value="${dir.junit.infa}/Adapter-jars"/>

	<target name="infa-junit-test" depends="sampleadapter.jar" >
	
		
		<mkdir dir="${test.junit.results}" />
		<mkdir dir="${test.junit.reports}" />
		<mkdir dir="${test.junit.adapterjars}" />

		<!-- Copy the jars of the dist folder into the Adapter-jars folder.
			 This is done as some changes will be done to contents of the adapter jar -->
		<copy todir="${test.junit.adapterjars}">
			<fileset dir="${dir.dist}" includes="*.jar"/>
		</copy>
		
		<!-- 
			NOTE: Change this by manually copying the adapter-interfaceTester.jar,hamcrest-all-1.3.jar,junit-4.10.jar and log4j-1.2.9.jar into your lib. 
			You will not have dir ${toolkit-dist.dir}/adapter-tester.
		 -->
		<copy todir="${dir.lib}">
			<fileset dir="${toolkit-dist.dir}/adapter-tester" includes="*.jar"/>
		</copy>
		
		<path id="junit.classpath">
				<fileset dir="${dir.lib}">
					<include name = "*.jar"/>
				</fileset>
				<fileset dir="${dir.dist}">
					<include name = "*.jar"/>
				</fileset>
		</path>
		<!-- A file ./INFA_JUnit/Junit_Log.log will be created. This config is specified in ${dir.lib}/adapter-interfaceTester.jar!/log4j.properties -->
		<property url="jar:file:${dir.lib}/adapter-interfaceTester.jar!/log4j.properties" />
		
		<java classname="com.informatica.cloud.api.adapter.test.INICreator" resultproperty="fileCreated" >
					<classpath refid="junit.classpath"/>
		</java>
		<fail message=".${line.separator}------> INI file has been created under 'infa_junit/INIFile' directory.${line.separator}------> Set the parameters in the .ini and run the tests again.${line.separator}">
			<condition>
				<equals arg1="${fileCreated}" arg2="1"/>
			</condition>
		</fail>
		
		<!-- See the <uuid>.ini file in INIFiles for setting up the connection parameters like username/password/url and SampleSize for testing the record names -->
		<junit   printsummary="yes" haltonfailure="no" haltonerror="no">
			<classpath refid="junit.classpath"/>
			<formatter type="xml" usefile="true" />
			<test name = "com.informatica.cloud.api.adapter.test.metadata.RegistrationInfoTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.typesystem.DataTypeListTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.typesystem.TypeSystemTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.plugin.PluginTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.connection.ConnectionTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.connection.ConnectionAttributeListTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.metadata.MetaDataTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.metadata.MetaDataParameterizedTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.metadata.ReadOperationAttributeListTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.metadata.RecordAttributeListTest" todir="${test.junit.results}" />
			<test name = "com.informatica.cloud.api.adapter.test.metadata.WriteOperationAttributeListTest" todir="${test.junit.results}" />
			<!-- This will create a <Record_name>.csv file in the CSV folder for the record name specified in the <uuid>.ini file -->
			<test name = "com.informatica.cloud.api.adapter.test.read.ReadTest" todir="${test.junit.results}" />
			<!-- For testing record say, "Opportunity" specified in the <uuid>.ini file 
			through WriteTest create the following files in ./CSV/ folder  
				* Opportunity_Write.csv for testing insert().
				* Opportunity_Update.csv for testing update().
				* Opportunity_Upsert.csv for testing upsert().
				* Opportunity_Delete.csv for testing delete().
			-->
			<test name = "com.informatica.cloud.api.adapter.test.write.WriteTest" todir="${test.junit.results}" />
			<!-- use this if the order doesn't matter -->
			<!-- 
			 <batchtest todir="${test.junit.results}">
		        <fileset dir="${dir.build}">
		          <include name="**/*Test.class"/>	
		        </fileset>
		      </batchtest> 
		     -->
		</junit>

		<junitreport todir="${test.junit.results}">
			<fileset dir="${test.junit.results}">
				<include name="TEST-*" />
			</fileset>
			<report todir="${test.junit.reports}"/>
		</junitreport>
		<echo message="Open index.html to view the results in 'infa_junit\junit_reports'"/>
	</target>

	<target name ="infa-junit-clean">
		<delete dir="${dir.junit.infa}" />
	</target>

	<!-- ===== END OF JUNIT RELATED TARGETS ====== -->
</project>
